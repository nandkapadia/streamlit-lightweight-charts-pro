---
description: Examples and documentation patterns
---

# Examples and Documentation

## Example Structure

The project includes comprehensive examples organized by category:

- **Getting Started**: [examples/getting_started/](mdc:examples/getting_started/) - Basic usage examples
- **Chart Types**: [examples/chart_types/](mdc:examples/chart_types/) - Different chart types
- **Advanced Features**: [examples/advanced_features/](mdc:examples/advanced_features/) - Complex features
- **Tutorials**: [examples/tutorials/](mdc:examples/tutorials/) - Step-by-step tutorials

## Example Patterns

### Basic Chart Example
```python
# examples/getting_started/basic_line_chart.py
import streamlit as st
from streamlit_lightweight_charts_pro import Chart, LineSeries
from streamlit_lightweight_charts_pro.data import SingleValueData

st.title("Basic Line Chart")

# Create sample data
data = [
    SingleValueData("2024-01-01", 100),
    SingleValueData("2024-01-02", 105),
    SingleValueData("2024-01-03", 103),
    SingleValueData("2024-01-04", 108),
]

# Create and render chart
chart = Chart(series=LineSeries(data, color="#2196F3"))
chart.render(key="basic_line_chart")
```

### Advanced Example with Method Chaining
```python
# examples/advanced_features/chart_customization.py
from streamlit_lightweight_charts_pro import (
    Chart, LineSeries, create_text_annotation, create_arrow_annotation
)

# Fluent API with method chaining
chart = (Chart()
         .add_series(LineSeries(data, color="#ff0000"))
         .update_options(height=400, width=800)
         .add_annotation(create_text_annotation("2024-01-01", 100, "Support"))
         .add_annotation(create_arrow_annotation("2024-01-02", 105, "Resistance")))
```

## Documentation Standards

### Docstring Format
Use Google-style docstrings for all public functions and classes:

```python
def create_line_chart(data: List[SingleValueData], color: str = "#2196F3") -> Chart:
    """Create a line chart with the specified data and color.

    Args:
        data: List of SingleValueData points for the line chart
        color: Color of the line in hex format (default: "#2196F3")

    Returns:
        Chart: Configured chart instance ready for rendering

    Example:
        ```python
        data = [SingleValueData("2024-01-01", 100)]
        chart = create_line_chart(data, color="#ff0000")
        chart.render(key="my_chart")
        ```
    """
```

### README Structure
- **Overview**: Project description and key features
- **Installation**: Setup instructions
- **Quick Start**: Basic usage examples
- **API Reference**: Detailed API documentation
- **Examples**: Links to example files
- **Contributing**: Development guidelines

### Code Comments
- **Complex Logic**: Explain complex algorithms and business logic
- **API Decisions**: Document why certain API design decisions were made
- **Performance**: Note performance considerations and optimizations
- **TODOs**: Use TODO comments for future improvements

## Example Categories

### Getting Started Examples
- Basic line chart
- Data formats
- Pane heights

### Chart Type Examples
- Line charts (basic, advanced, with markers)
- Candlestick charts (basic, customized, with volume)
- Area charts (basic, multi-area)
- Bar charts (basic, customized)
- Histogram charts (basic, customized)
- Baseline charts (basic, customized)

### Advanced Features
- Chart customization
- Multi-pane charts
- Annotations and markers
- Trade visualization
- Range switcher
- Auto-sizing
- Gradient ribbons
- Trend fills

### Integration Examples
- Pandas DataFrame integration
- CSV data loading
- API data integration
- Dashboard layouts
