# Frontend Development Guide

**Consolidated from**: frontend-development.mdc, react-integration-patterns.mdc, custom-series-development.mdc, pane-primitive-positioning.mdc

---

## üìã Quick Reference

### Key Files
- `frontend/src/LightweightCharts.tsx` - Main component
- `frontend/src/series/UnifiedSeriesFactory.ts` - Series creation
- `frontend/src/series/descriptors/` - Series descriptors

### Important Patterns
- **React 19**: Use useTransition, useDeferredValue
- **Series Descriptors**: Single source of truth for series types
- **Property Flattening**: LineOptions nested ‚Üí flat API
- **Rendering**: Always use `renderingUtils.ts` for bar-width-aware drawing

### Rendering Utilities (‚ö†Ô∏è CRITICAL - READ FIRST)
When implementing ANY custom rendering (primitives, series, plugins):
- **Location**: `frontend/src/utils/renderingUtils.ts`
- **Bar-Width-Aware Functions**:
  - `drawContinuousLine()` - Line drawing with `extendStart`/`extendEnd` for bar-width
  - `drawSegmentedLine()` - Multi-segment lines with different styles
  - `fillBetweenLines()` - Fill areas with `edgeExtension` for bar-width
  - `getBarSpacing()` - Available in `commonRendering.ts`
- **Common Rendering**: `frontend/src/plugins/series/base/commonRendering.ts`
  - `drawLine()`, `drawMultiLine()`, `drawFillArea()` - Legacy, NO bar-width support
  - Use `renderingUtils.ts` instead for new code

---

##Content

- `frontend-development.mdc` - TypeScript/React patterns
- `react-integration-patterns.mdc` - React hooks and patterns
- `custom-series-development.mdc` - Custom series primitives
- `pane-primitive-positioning.mdc` - Multi-pane positioning

---
